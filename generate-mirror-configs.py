#!/usr/bin/env python

from __future__ import print_function

import os
import stat
import Mirror

if __name__ == '__main__':
    cfg = Mirror.Config('mirrors.json')
    cfg.show()

    for distro in cfg.distro_list:
        dist = Mirror.Distro(cfg, distro)
        dist.show()
        for arch in dist.arch_list.keys():
            if dist.enabled:
                dist.generate_distro_config(arch)
                dist.generate_mirror_script(arch)
            else:
                dist.clean(arch)

    # generate run script
    try:
        with open(cfg.run_script, 'w') as script:
            print('#/usr/bin/env bash', file=script)
            print('# This file is automatically generated.', file=script)
            print('# !!! DO NOT EDIT !!!', file=script)
            print('# set -x # echo executing statements (debug)', file=script)
            print('set -e # exit on subcommand errors', file=script)
            print('set -u # exit on unassigned variables', file=script)
            print('for mirror_script in {}/*.sh; do'.format(cfg.script_dir), file=script)
            print("\t[ -x $mirror_script ] && $mirror_script", file=script)
            print('done', file=script)
        os.chmod(cfg.run_script, stat.S_IRWXU)
    except Exception, e:
        raise e

    print("\nConfiguration complete. Run '{}' to update mirrors.\n".format(cfg.run_script))
